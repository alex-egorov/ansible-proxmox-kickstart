# Ansible version of https://morph027.gitlab.io/post/pve-kickseed/
# Example args file: https://gitlab.com/snippets/1548095
#
# Set vars when calling:
# ansible-playbook -e "args_template=files/args-centos-gitlab-runner.ks" -e "kernel=http://ftp.hosteurope.de/mirror/centos.org/7/os/x86_64/isolinux/vmlinuz" -e "initrd=http://ftp.hosteurope.de/mirror/centos.org/7/os/x86_64/isolinux/initrd.img" ansible/playbooks/proxmox-kickseed.yml
#
# https://morph027.gitlab.io/post/pve-kickseed/
# https://gitlab.com/snippets/1548093
# https://gitlab.com/morph027/kickstart-gitlab-ci-multi-runner/raw/master/gitlab-runner.cfg
# https://gitlab.com/snippets/1548095

#-kernel /tmp/kernel -initrd /tmp/initrd -append "inst.stage2=http://ftp.byfly.by/pub/CentOS/7/os/x86_64/ inst.repo=http://ftp.byfly.by/pub/CentOS/7/os/x86_64/ inst.ks=/tmp/ks_vagrant.cfg rd.noverifyssl
---
- hosts: localhost
  gather_facts: false

  vars_prompt:
  - name: "vmname"
    prompt: "VM name? "
    private: no
  - name: "args_template"
    prompt: "args template? "
    default: "centos7-args.yml"
    private: no
  - name: "kernel"
    prompt: "kernel? "
    default: "http://ftp.byfly.by/pub/CentOS/7/os/x86_64/isolinux/vmlinuz"
    private: no
  - name: "initrd"
    prompt: "initrd? "
    default: "http://ftp.byfly.by/pub/CentOS/7/os/x86_64/isolinux/initrd.img"
    private: no
  - name: "api_host"
    prompt: "PVE API host? "
    default: "192.168.11.99"
    private: no
  - name: "node"
    prompt: "PVE target node? "
    default: "pve"
    private: no
  - name: "api_user"
    prompt: "PVE API user? "
    default: "root@pam"
    private: no
  - name: "api_password"
    prompt: "PVE API password? "
    private: yes
  - name: "ks_url"
    prompt: "Kickstart URL? "
    default: "https://raw.githubusercontent.com/alex-egorov/ansible-proxmox-kickstart/master/http/centos7.cfg"
    private: no
  tasks:
  - name: Random port number
    set_fact:
      port_number: "{{ 65000 |random(start=32000) }}"

  - name: Create KVM
    proxmox_kvm:
      api_user: "{{ api_user }}"
      api_password: "{{ api_password }}"
      api_host: "{{ api_host }}"
      node: "{{ node }}"
      name: "{{ vmname }}"
      net: '{"net0":"virtio,bridge=vmbr0"}'
      virtio: '{"virtio0":"local-lvm:20"}'
      ide: '{"ide2": "local:iso/CentOS-7-x86_64-Minimal-1611.iso,media=cdrom,size=680M"}'
      cores: 2
      memory: 2048
      balloon: 1024
      vga: std
      ostype: l26
      args: "{{ lookup('template', '{{ args_template }}') | replace('\n', ' ')}}"
      state: present
  - name: Let it settle
    pause:
      seconds: 15
  - name: Fetch kernel
    get_url:
      url:  "{{ kernel }}"
      dest: "/tmp/kernel"
    delegate_to: "{{ api_host }}"
  - name: Fetch initrd
    get_url:
      url:  "{{ initrd }}"
      dest: "/tmp/initrd"
    delegate_to: "{{ api_host }}"
  - name: Wait for kernel
    wait_for:
      path: /tmp/kernel
    delegate_to: "{{ api_host }}"
  - name: Wait for initrd
    wait_for:
      path: /tmp/initrd
    delegate_to: "{{ api_host }}"
  - name: Deploy VM
    proxmox_kvm:
      api_user: "{{ api_user }}"
      api_password: "{{ api_password }}"
      api_host: "{{ api_host }}"
      node: "{{ node }}"
      name: "{{ vmname }}"
      state: started
  - name: Get VMID
    proxmox_kvm:
      api_user: "{{ api_user }}"
      api_password: "{{ api_password }}"
      api_host: "{{ api_host }}"
      node: "{{ node }}"
      name: "{{ vmname }}"
      state: current
    register: result
  - name: Set VMID
    set_fact:
      vmid: "{{ result.msg | regex_replace('^.* = (\\d+).*?$', '\\1') }}"
  - name: Wait for deployment to be finished
    wait_for:
      host: "{{ api_host }}"
      port: "{{ port_number }}"
      delay: 10
      state: stopped
      timeout: 1800
  - name: Remove deploy args from VM
    proxmox_kvm:
      api_user: "{{ api_user }}"
      api_password: "{{ api_password }}"
      api_host: "{{ api_host }}"
      node: "{{ node }}"
      name: "{{ vmname }}"
      delete: args
  - name: Start VM (again)
    proxmox_kvm:
      api_user: "{{ api_user }}"
      api_password: "{{ api_password }}"
      api_host: "{{ api_host }}"
      node: "{{ api_host }}"
      name: "{{ vmname }}"
      state: started
